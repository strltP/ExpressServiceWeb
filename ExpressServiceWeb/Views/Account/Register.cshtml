@model ExpressServiceWeb.RegisterViewModel

@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <h2 class="text-center text-primary mb-4">Đăng ký</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="card p-4 shadow-sm">
            <h4 class="card-title">Thông tin người dùng</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group row">
                @Html.LabelFor(m => m.FullName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(m => m.PhoneNumber, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(m => m.Role, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(m => m.Role, new SelectList(new[] { "customer", "driver" }), "Chọn vai trò", new { @class = "form-control", id = "roleSelect" })
                    @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="driverFields" style="display:none;">
                <div class="form-group row">
                    @Html.LabelFor(m => m.VehicleTypeId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.VehicleTypeId, ViewBag.VehicleTypeId as SelectList, "Chọn loại phương tiện", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.VehicleTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(m => m.LicensePlate, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.EditorFor(m => m.LicensePlate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.LicensePlate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-9 offset-sm-3">
                    <input type="submit" value="Đăng ký" class="btn btn-primary btn-block" />
                </div>
            </div>
        </div>
       
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            function toggleDriverFields() {
                if ($('#roleSelect').val() == 'driver') {
                    $('#driverFields').show();
                } else {
                    $('#driverFields').hide();
                }
            }

            $('#roleSelect').change(toggleDriverFields);
            toggleDriverFields(); // Initial call to set the correct state
        });
    </script>
}
